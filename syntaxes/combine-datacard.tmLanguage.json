{
    "scopeName": "source.combine-datacard",
    "patterns": [
        {
            "name": "markup.heading.separator.combine-datacard",
            "match": "^\\s*[-]{3,}\\s*$"
        },
        {
            "name": "comment.block.preheader.combine-datacard",
            "begin": "\\A(?!\\s*[-]{3,}\\s*$)(?!\\s*imax\\b)",
            "end": "^(?=\\s*imax\\b|\\s*[-]{3,}\\s*$)"
        },
        {
            "name": "keyword.combine-datacard",
            "match": "\\b(observation|bin|process|rate|shape|shapes|kmax|imax|jmax|lnN|lnU|gmN|rateParam|discrete|nuissance)\\b"
        },
        {
            "name": "comment.combine-datacard",
            "match": "#.*"
        },
        {
            "name": "constant.numeric.combine-datacard",
            "match": "-?\\b\\d+(?:\\.\\d+)?(?:[eE][-+]?\\d+)?\\b|(?<=\\s)-(?=\\s)|(?<=\\s)\\*(?=\\s)"
        },
        {
            "name": "variable.parameter.combine-datacard",
            "match": "^\\s*([A-Za-z][A-Za-z0-9_]*)\\s+"
        },
        {
            "name": "entity.name.tag.combine-datacard",
            "match": "\\s([A-Za-z][A-Za-z0-9_]*)\\s"
        },
        {
            "name": "constant.other.placeholder.combine-datacard",
            "match": "\\$(PROCESS|PROCESS_\\$SYSTEMATIC|[A-Z][A-Z0-9_]*)"
        },
        {
            "name": "string.unquoted.filename.combine-datacard",
            "match": "\\b[\\w\\-\\.\\$\\{\\}/]+\\.root\\b"
        }
    ]
}
